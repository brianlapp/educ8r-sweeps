
#root {
  margin: 0 auto;
  text-align: left;
  overflow-x: hidden; /* Prevent horizontal overflow */
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

/* Performance optimized page transitions */
.page-enter {
  opacity: 0;
  transform: translate3d(0, 10px, 0); /* Use translate3d for GPU acceleration */
  will-change: opacity, transform; /* Hint to browser for optimization */
}

.page-enter-active {
  opacity: 1;
  transform: translate3d(0, 0, 0);
  transition: opacity 300ms, transform 300ms;
}

.page-exit {
  opacity: 1;
  transform: translate3d(0, 0, 0);
  will-change: opacity, transform;
}

.page-exit-active {
  opacity: 0;
  transform: translate3d(0, -10px, 0);
  transition: opacity 300ms, transform 300ms;
}

/* Respect user preferences for reduced motion */
@media (prefers-reduced-motion: reduce) {
  .page-enter,
  .page-enter-active,
  .page-exit,
  .page-exit-active {
    transition: none;
    transform: none;
  }
  
  /* Disable all animations */
  *, *::before, *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Add contain: content to all images by default to avoid layout shifts */
img {
  content-visibility: auto;
  contain: content;
}

/* Improve performance with content-visibility where appropriate */
.off-screen-content {
  content-visibility: auto;
  contain-intrinsic-size: auto 300px;
}

/* Optimize CSS for image loading to prevent layout shifts */
.img-container {
  position: relative;
  overflow: hidden;
}

.img-container img {
  display: block;
  width: 100%;
  height: auto;
}

.img-container.fixed-ratio {
  height: 0;
  width: 100%;
}

/* Common aspect ratios */
.ratio-16-9 {
  padding-top: 56.25%; /* 16:9 */
}

.ratio-4-3 {
  padding-top: 75%; /* 4:3 */
}

.ratio-1-1 {
  padding-top: 100%; /* Square */
}

/* Blur-up image loading effect */
.blur-up {
  filter: blur(5px);
  transition: filter 0.3s ease-in-out;
}

.blur-up.loaded {
  filter: blur(0);
}

/* Performance optimizations for images */
@media (min-width: 768px) {
  .lcp-image {
    content-visibility: auto;
    display: block;
  }
  
  /* Prevent font swap layout shifts */
  h1, h2, h3, .heading {
    font-display: optional;
  }
}

/* Error boundary styling */
.error-boundary {
  border: 1px solid #ff5555;
  border-radius: 0.5rem;
  padding: 1rem;
  margin: 1rem 0;
  background-color: #fff5f5;
}

.error-boundary-heading {
  color: #e53e3e;
  margin-top: 0;
  margin-bottom: 0.5rem;
  font-size: 1.25rem;
}

.error-boundary-message {
  color: #4a5568;
  margin-bottom: 1rem;
}

.error-boundary-retry {
  background-color: #fff;
  color: #e53e3e;
  border: 1px solid #e53e3e;
  padding: 0.5rem 1rem;
  border-radius: 0.25rem;
  cursor: pointer;
  font-size: 0.875rem;
  transition: background-color 0.2s;
}

.error-boundary-retry:hover {
  background-color: #fff8f8;
}

/* Add styles for skeleton loading states */
.skeleton {
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 200% 100%;
  animation: skeleton-loading 1.5s infinite;
  border-radius: 4px;
}

@keyframes skeleton-loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

/* Optimize main content layout for better CLS */
main {
  min-height: 50vh; /* Ensure minimum height to reduce layout shifts */
  transition: min-height 0.1s ease-out;
}

/* Optimize for print - hide unnecessary elements */
@media print {
  header, footer, nav, .no-print {
    display: none !important;
  }
  
  body {
    background: white;
    font-size: 12pt;
    color: black;
  }
  
  main {
    width: 100%;
    margin: 0;
    padding: 0;
  }
  
  a[href]:after {
    content: " (" attr(href) ")";
  }
}
